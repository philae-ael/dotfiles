#!/usr/bin/python

import argparse
import csv
import io
import json
import sys
from collections.abc import Generator
from contextlib import contextmanager


def json_printer(gen: Generator):
    print("[")
    try:
        line = gen.__next__()
        print(json.dumps(line), end="")
    except StopIteration:
        pass

    for line in gen:
        print(",\n", json.dumps(line), end="")
    print("\n]")


def jsonl_printer(gen: Generator):
    for line in gen:
        print(json.dumps(line))


def main(f, format, separator):
    match format:
        case "json":
            printer = json_printer
        case "jsonl":
            printer = jsonl_printer
        case _:
            raise Exception("Incorrect format")

    try:
        gen = (dict(r) for r in csv.DictReader(f, delimiter=separator))
        printer(gen)
    except (BrokenPipeError, KeyboardInterrupt):
        return


@contextmanager
def inputfile(filename, mode, encoding):
    if filename == "-":
        yield io.TextIOWrapper(sys.stdin.buffer, encoding=encoding)
    else:
        with open(filename, mode, encoding=encoding) as input:
            yield input


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--format", default="jsonl", choices=["json", "jsonl"])
    parser.add_argument("--encoding", default="utf-8")
    parser.add_argument("--separator", default=",")
    parser.add_argument("input", nargs="?", default="-")
    args = parser.parse_args()

    with inputfile(args.input, "r", args.encoding) as input:
        main(input, args.format, args.separator)
